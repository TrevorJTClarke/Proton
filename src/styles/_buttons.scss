$btn-border: 1px solid $button-border-color;
$btn-padding: 0 $ui-size/1.25;

// Mixins -----------------------

@mixin btn-default ($color, $hover-color, $selected-color, $text-color) {
  color: $text-color;
  text-shadow: none;
  border: $btn-border;
  background-color: $color;
  background-image: linear-gradient(lighten($color, 2%), $color);

  &:focus {
    //.focus(); // disabled for now, since :focus styles stay even after releasing mouse.
    outline: none;
  }
  &:focus,
  &:hover {
    color: $text-color-highlight;
    background-image: linear-gradient(lighten($hover-color, 2%), $hover-color);
  }
  &:active {
    background: darken($color, 4%);
    box-shadow: none;
  }
  &.selected {
    background: $selected-color;
  }
  &.selected:focus,
  &.selected:hover {
    background: lighten($selected-color, 2%);
  }
}

@mixin btn-variant ($color) {
  $text-color: contrast($color, hsl(0,0%,25%), white, 70% );
  @include btn-default(
    $color,
    lighten($color, 3%),
    saturate(darken($color, 12%), 20%),
    $text-color-highlight
  );
  color: $text-color;
  text-shadow: 0 1px 0 hsla(0,0%,0%,.2);

  @if $ui-lightness > 50% {
    border-color: transparent; // hide border on light backgrounds
  }

  &:hover,
  &:focus {
    color: $text-color;
  }

  &.icon:before {
    color: $text-color;
  }
}


.btn {
  color: $text-color;
  @include text('highlight');
  border-radius: $component-border-radius;
  border: none;
  text-shadow: none;

  height: $component-line-height + 2px;
  line-height: $component-line-height;

  padding: 0 $component-padding;
  font-size: $font-size;
  z-index: 0;

  background-color: $button-background-color;
  &:hover {
    background-color: $button-background-color-hover;
  }
  &.selected,
  &.selected:hover {
    // we want the selected button to behave like the :hover button; it's on top of the other buttons.
    z-index: 1;
    background-color: $button-background-color-selected;
  }
}


// Buttons -----------------------

.btn {
  height: initial;
  padding: $btn-padding;
  font-size: $ui-size;
  line-height: $ui-line-height;
}

.btn,
.btn.btn-default {
  @include btn-default($button-background-color, $button-background-color-hover, $button-background-color-selected, $text-color);
}

.btn.btn-primary {
  @include btn-variant($base-accent-color);
}
.btn.btn-info {
  @include btn-variant($background-color-info);
}
.btn.btn-success {
  @include btn-variant($background-color-success);
}
.btn.btn-warning {
  @include btn-variant($background-color-warning);
}
.btn.btn-error {
  @include btn-variant($background-color-error);
}

// TODO: Eval for need
// .btn.btn-xs,
// .btn-group-xs > .btn {
//   padding: $component-padding/4 $component-padding/2;
//   font-size: $font-size - 2px;
//   height: auto;
//   line-height: 1.3em;
// }
// .btn.btn-sm,
// .btn-group-sm > .btn {
//   padding: $component-padding/4 $component-padding/2;
//   height: auto;
//   line-height: 1.3em;
// }
// .btn.btn-lg,
// .btn-group-lg > .btn {
//   font-size: $font-size + 2px;
//   padding: $component-padding - 2px  $component-padding + 2px;
//   height: auto;
//   line-height: 1.3em;
// }



// Button Group -----------------------

.btn.btn-xs,
.btn-group-xs > .btn {
  font-size: $ui-size*.8;
  line-height: $ui-line-height;
  padding: $btn-padding;
}
.btn.btn-sm,
.btn-group-sm > .btn {
  font-size: $ui-size*.9;
  line-height: $ui-line-height;
  padding: $btn-padding;
}
.btn.btn-lg,
.btn-group-lg > .btn {
  font-size: $ui-size * 1.5;
  line-height: $ui-line-height;
  padding: $btn-padding;
}

.btn-group > .btn {
  border-left: 1px solid $button-border-color;
  border-right: 1px solid $button-border-color;
}
.btn-group > .btn:first-child {
  border-left: none;
  border-top-left-radius: $component-border-radius;
  border-bottom-left-radius: $component-border-radius;
}
.btn-group > .btn:last-child,
.btn-group > .btn.selected:last-child,
.btn-group > .dropdown-toggle {
  border-right: none;
  border-top-right-radius: $component-border-radius;
  border-bottom-right-radius: $component-border-radius;
}

// Button Group -----------------------

.btn-group > .btn {
  z-index: 0;
  &:hover {
    z-index: 0;
  }

  &:first-child {
    border-left: $btn-border;
  }
  &:last-child {
    border-right: $btn-border;
  }

  // hide border on light backgrounds
  @if $ui-lightness > 50% {
    &.btn-primary:first-child,
    &.btn-info:first-child,
    &.btn-success:first-child,
    &.btn-warning:first-child,
    &.btn-error:first-child {
      border-left-color: transparent;
    }

    &.btn-primary:last-child,
    &.btn-info:last-child,
    &.btn-success:last-child,
    &.btn-warning:last-child,
    &.btn-error:last-child {
      border-right-color: transparent;
    }
  }

  &.btn:focus {
    z-index: 1;
  }

  &.selected,
  &.selected:first-child,
  &.selected:last-child {
    color: $button-text-color-selected;
    border: 1px solid $button-border-color-selected;
  }
  &.selected + .btn {
    border-left-color: $button-border-color-selected;
  }
}

.btn-toolbar {
  > .btn-group + .btn-group, > .btn-group + .btn, > .btn + .btn {
    float: none;
    display: inline-block;
    margin-left: 0;
  }
  > * {
    margin-right: $component-padding / 2;
  }
  > *:last-child {
    margin-right: 0;
  }
}
